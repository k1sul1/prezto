#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Christian Nikkanen <hi@kisu.li>
#
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export PATH="$PATH:/usr/local/bin/"
export PATH="/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
export PATH="$PATH:$HOME/.composer/vendor/bin"
export PATH="$PATH:$HOME/.yarn/bin"
export PATH="$PATH:$HOME/.npm-global/bin"
export PATH="$(brew --prefix homebrew/php/php70)/bin:$PATH"

export EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim # wtf, why was the default nano?
export BLOCKSIZE=1k

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

DEFAULT_USER=k1sul1

export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/ffmpeg/lib/pkgconfig/

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

eval "$(hub alias -s)"
eval "$(scmpuff init -s)"
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

function all_polylang_prints() {
  grep -I -E -o "pll_e\((.*)\)" -r . | sed -e 's,.*pll_e(\([^<]*\)).*,\1,g' | sort | uniq
  grep -I -E -o "pll__\((.*)\)" -r . | sed -e 's,.*pll__(\([^<]*\)).*,\1,g' | sort | uniq
}

alias gc='git commit'

git () {
  for arg
  do
    if [[ $arg == -a* || $arg == -[^-]*a* ]]
    then
      stop_using_that_flag
      return 1
    fi
  done
	case $1 in
		(commit | blame | log | rebase | merge) eval "$(scmpuff expand -- "$SCMPUFF_GIT_CMD" "$@")" ;;
		(checkout | diff | rm | reset) eval "$(scmpuff expand --relative -- "$SCMPUFF_GIT_CMD" "$@")" ;;
		(add) eval "$(scmpuff expand -- "$SCMPUFF_GIT_CMD" "$@")"
			scmpuff_status ;;
		(*) "$SCMPUFF_GIT_CMD" "$@" ;;
	esac
}

stop_using_that_flag() {
  echo "Stop using -a, $USER!"
  # echo "You are now in a timeout."
  # settings=$(stty -g)
  # stty raw
  # sleep 15
  # stty "$settings"
}


wp() {
  if [ -f Vagrantfile ]; then
    echo "Running wp-cli in Vagrant..."
    vagrant ssh --command "wp $(echo $@)"
  else
    /usr/local/bin/wp $(echo $@)
  fi
}

phpcheck(){
    find ./ -iname "*.php" -exec php -l {} \; | grep -i "Errors.parsing"
}
